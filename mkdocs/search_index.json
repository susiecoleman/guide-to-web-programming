{
    "docs": [
        {
            "location": "/", 
            "text": "Programming for the Web\n\n\nThis guide covers HTML, CSS and Javascript which are used together to make interactive websites. They are sometimes referred to as 'front end technologies'. This is because they are used to build the part of a website the user interacts with directly. The term 'front end' is used in contrast to the term 'back end'. In web development back end refers to code running on a server. \nWikipedia\n covers the difference between the two in more detail.\n\n\nDebugging\n\n\nIf a website is not loading correctly in the browser then the developer tools can be used to diagnose the problem\n\n\nChrome Developer Tools\n\n\nFirefox Developer Tools\n\n\nGetting Started\n\n\nA very basic website containing a javascript, html and css file already linked together can be downloaded from \ngithub\n.\n\n\nCodepen\n\n\nCodepen\n is a website that allows you to experiment with html css and javascript in the browser. There are multiple code examples in this guide that use codepen. To experiment with changing the code click 'edit on codepen' in any of the examples. Editing the examples on codepen will not affect the examples in the guide.\n\n\nNote: Codepen does not include head and body tags in it's examples so any code written would need to go inside the body tag if it was being added to a webpage.", 
            "title": "Home"
        }, 
        {
            "location": "/#programming-for-the-web", 
            "text": "This guide covers HTML, CSS and Javascript which are used together to make interactive websites. They are sometimes referred to as 'front end technologies'. This is because they are used to build the part of a website the user interacts with directly. The term 'front end' is used in contrast to the term 'back end'. In web development back end refers to code running on a server.  Wikipedia  covers the difference between the two in more detail.", 
            "title": "Programming for the Web"
        }, 
        {
            "location": "/#debugging", 
            "text": "If a website is not loading correctly in the browser then the developer tools can be used to diagnose the problem  Chrome Developer Tools  Firefox Developer Tools", 
            "title": "Debugging"
        }, 
        {
            "location": "/#getting-started", 
            "text": "A very basic website containing a javascript, html and css file already linked together can be downloaded from  github .", 
            "title": "Getting Started"
        }, 
        {
            "location": "/#codepen", 
            "text": "Codepen  is a website that allows you to experiment with html css and javascript in the browser. There are multiple code examples in this guide that use codepen. To experiment with changing the code click 'edit on codepen' in any of the examples. Editing the examples on codepen will not affect the examples in the guide.  Note: Codepen does not include head and body tags in it's examples so any code written would need to go inside the body tag if it was being added to a webpage.", 
            "title": "Codepen"
        }, 
        {
            "location": "/html/", 
            "text": "HTML\n\n\nHTML stands for Hyper Text Markup Language. It gives a page of text a semantic structure e.g. This is text is a paragraph, this text is a header, this is an image, this is link. The browser will then use this information to decide how to display the text in the html document. For example, header text should be bigger than paragraph text. \n\n\nElements\n\n\nThe items that make up a web page (paragraphs, headers, images etc.) are referred to as elements. A webpage is a collection of elements.\n\n\nTags\n\n\nTags are used to indicate an element (e.g. this is a paragraph). A html document is text annotated with html tags and a web page is a html document.\n\n\nTags look like this:\n\n\np\nThis is a paragraph\n/p\n\n\n\n\n\nThere is a finite list of tags as browsers need to know all available tags in order to decide how to handle them. This list is maintained by \nW3C (World Wide Web Consortium)\n. A list of all elements is available \nhere\n. \n\n\nAttributes\n\n\nElements can have attributes that provide additional information about the element or adjust the behaviour of the element. For example when using an \nimage tag\n an attribute is used to provide the link to an image. When using a \nform tag\n you can use it's autocomplete attribute to determine whether or not values can be autocompleted by the browswer. A list of all attributes is available \nhere\n.\n\n\nAttributes on tags look like this:\n\n\np style=\ncolor:red\nThis is a paragraph with an attribute\n/p\n\n\n\n\n\nStructuring a HTML Document\n\n\nThis is a very basic HTML document.\n\n\n!DOCTYPE html\n\n\nhtml\n\n    \nhead\n\n    \n/head\n\n    \nbody\n\n    \n/body\n\n\n/html\n\n\n\n\n\nIn a html document there is a top level tag (\nhtml\n) and then the other tags are nested within these tags. Between an opening and closing tag of the same type there can be text and there can be other html tags\n\n\nThis means the structure of a webpage is like a tree. \n\n\n\n\nThe \nhtml\n tag is the top level tag and it has 2 children \nhead\n and \nbody\n. The \nhead\n tag will contain information about the page (sometimes called metadata) e.g. links to the css. The \nbody\n tag contains the html for content that is visible on your site.\n\n\nThis is a more complicated example including some more html tags.\n\n\n!DOCTYPE html\n\n\nhtml\n\n    \nhead\n\n        \ntitle\nBees Website\n/title\n\n    \n/head\n\n    \nbody\n\n        \nh1\nBees\n/h1\n\n        \np\nBees are flying insects closely related to wasps and ants, known for their role in pollination and, in the case of the best-known bee species, the European honey bee, for producing honey and beeswax. Bees are a monophyletic lineage within the superfamily Apoidea and are presently considered a clade, called Anthophila. There are nearly 20,000 known species of bees in seven recognized biological families. They are found on every continent except Antarctica, in every habitat on the planet that contains insect-pollinated flowering plants.\n/p\n\n        \np\nBees are adapted for feeding on nectar and pollen, the former primarily as an energy source and the latter primarily for protein and other nutrients. Most pollen is used as food for larvae. Bee pollination is important both ecologically and commercially; the decline in wild bees has increased the value of pollination by commercially managed hives of honey bees.\n/p\n\n        \nh2\nBees that live in colonies\n/h2\n\n        \nul\n\n            \nli\nHoney Bees\n/li\n\n            \nli\nBumblebees\n/li\n\n            \nli\nStingless Bees\n/li\n\n        \n/ul\n\n        \nimg src=\nhttps://upload.wikimedia.org/wikipedia/commons/3/32/Bee-apis.jpg\n /\n\n    \n/body\n\n\n/html\n\n\n\n\n\nThis shows what the html looks like when rendered by a browser. By clicking on 'edit on Codepen' you can experiment with changing the html or adding new html tags. Note codepen does not include head and body tags in it's examples so any code written here would need to go inside the body tag if it was being added to a webpage.\n\n\nSee the Pen \nBasic HTML Elements\n by Susie (\n@susiec20\n) on \nCodePen\n.\n\n\n\n\n\n\nThe tree for this document:\n\n\n\nDiv and Span Tag\n\n\nTags do two things:\n\n\n\n\nProvide semantic information about the parts of the website (Paragraphs, headers, images)\n\n\nGroup information together. This is shown by nested tags. For example the body tag indicates that everything between the opening body tag and closing body tag is part of the visible web site. \n\n\n\n\nThe div and span tag have no effect on the layout until they are styled by css. This is useful for grouping content together or selecting a specific piece of content without having to worry about overriding default styles.\n\n\nDiv tag\n\n\nA \ndiv\n tag is a block element which means by default it takes up the full width of the page. But this can be changed using css.\n\n\nThis example shows using div tags to group the content into 2 columns. Then css is used to add the style that makes the content appear in 2 columns. The html tag is providing the semantic information 'this content is in 2 columns' and the css what actually makes the content appear in 2 columns.\n\n\nSee the Pen \nBasic usecase for divs\n by Susie (\n@susiec20\n) on \nCodePen\n.\n\n\n\n\n\n\nSpan tag\n\n\nA \nspan\n tag is an inline element which means it only occupies the space bounded by the tag rather than taking up the full width of the page.\n\n\nThis example shows how to use a span tag to apply a style to specific part of the paragraph.\n\n\nSee the Pen \nBasic span example\n by Susie (\n@susiec20\n) on \nCodePen\n.\n\n\n\n\n\n\nA more detailed summary and example of the difference between inline and block level elements is available on the \nMDN web docs", 
            "title": "HTML"
        }, 
        {
            "location": "/html/#html", 
            "text": "HTML stands for Hyper Text Markup Language. It gives a page of text a semantic structure e.g. This is text is a paragraph, this text is a header, this is an image, this is link. The browser will then use this information to decide how to display the text in the html document. For example, header text should be bigger than paragraph text.", 
            "title": "HTML"
        }, 
        {
            "location": "/html/#elements", 
            "text": "The items that make up a web page (paragraphs, headers, images etc.) are referred to as elements. A webpage is a collection of elements.", 
            "title": "Elements"
        }, 
        {
            "location": "/html/#tags", 
            "text": "Tags are used to indicate an element (e.g. this is a paragraph). A html document is text annotated with html tags and a web page is a html document.  Tags look like this:  p This is a paragraph /p   There is a finite list of tags as browsers need to know all available tags in order to decide how to handle them. This list is maintained by  W3C (World Wide Web Consortium) . A list of all elements is available  here .", 
            "title": "Tags"
        }, 
        {
            "location": "/html/#attributes", 
            "text": "Elements can have attributes that provide additional information about the element or adjust the behaviour of the element. For example when using an  image tag  an attribute is used to provide the link to an image. When using a  form tag  you can use it's autocomplete attribute to determine whether or not values can be autocompleted by the browswer. A list of all attributes is available  here .  Attributes on tags look like this:  p style= color:red This is a paragraph with an attribute /p", 
            "title": "Attributes"
        }, 
        {
            "location": "/html/#structuring-a-html-document", 
            "text": "This is a very basic HTML document.  !DOCTYPE html  html \n     head \n     /head \n     body \n     /body  /html   In a html document there is a top level tag ( html ) and then the other tags are nested within these tags. Between an opening and closing tag of the same type there can be text and there can be other html tags  This means the structure of a webpage is like a tree.    The  html  tag is the top level tag and it has 2 children  head  and  body . The  head  tag will contain information about the page (sometimes called metadata) e.g. links to the css. The  body  tag contains the html for content that is visible on your site.  This is a more complicated example including some more html tags.  !DOCTYPE html  html \n     head \n         title Bees Website /title \n     /head \n     body \n         h1 Bees /h1 \n         p Bees are flying insects closely related to wasps and ants, known for their role in pollination and, in the case of the best-known bee species, the European honey bee, for producing honey and beeswax. Bees are a monophyletic lineage within the superfamily Apoidea and are presently considered a clade, called Anthophila. There are nearly 20,000 known species of bees in seven recognized biological families. They are found on every continent except Antarctica, in every habitat on the planet that contains insect-pollinated flowering plants. /p \n         p Bees are adapted for feeding on nectar and pollen, the former primarily as an energy source and the latter primarily for protein and other nutrients. Most pollen is used as food for larvae. Bee pollination is important both ecologically and commercially; the decline in wild bees has increased the value of pollination by commercially managed hives of honey bees. /p \n         h2 Bees that live in colonies /h2 \n         ul \n             li Honey Bees /li \n             li Bumblebees /li \n             li Stingless Bees /li \n         /ul \n         img src= https://upload.wikimedia.org/wikipedia/commons/3/32/Bee-apis.jpg  / \n     /body  /html   This shows what the html looks like when rendered by a browser. By clicking on 'edit on Codepen' you can experiment with changing the html or adding new html tags. Note codepen does not include head and body tags in it's examples so any code written here would need to go inside the body tag if it was being added to a webpage.  See the Pen  Basic HTML Elements  by Susie ( @susiec20 ) on  CodePen .   The tree for this document:", 
            "title": "Structuring a HTML Document"
        }, 
        {
            "location": "/html/#div-and-span-tag", 
            "text": "Tags do two things:   Provide semantic information about the parts of the website (Paragraphs, headers, images)  Group information together. This is shown by nested tags. For example the body tag indicates that everything between the opening body tag and closing body tag is part of the visible web site.    The div and span tag have no effect on the layout until they are styled by css. This is useful for grouping content together or selecting a specific piece of content without having to worry about overriding default styles.", 
            "title": "Div and Span Tag"
        }, 
        {
            "location": "/html/#div-tag", 
            "text": "A  div  tag is a block element which means by default it takes up the full width of the page. But this can be changed using css.  This example shows using div tags to group the content into 2 columns. Then css is used to add the style that makes the content appear in 2 columns. The html tag is providing the semantic information 'this content is in 2 columns' and the css what actually makes the content appear in 2 columns.  See the Pen  Basic usecase for divs  by Susie ( @susiec20 ) on  CodePen .", 
            "title": "Div tag"
        }, 
        {
            "location": "/html/#span-tag", 
            "text": "A  span  tag is an inline element which means it only occupies the space bounded by the tag rather than taking up the full width of the page.  This example shows how to use a span tag to apply a style to specific part of the paragraph.  See the Pen  Basic span example  by Susie ( @susiec20 ) on  CodePen .   A more detailed summary and example of the difference between inline and block level elements is available on the  MDN web docs", 
            "title": "Span tag"
        }, 
        {
            "location": "/css/", 
            "text": "CSS\n\n\nCSS stands for cascading style sheets. It is used to describe how a html document should look. In web development typically this means how it will look on the screen but it could also mean how it will look on paper. CSS is a style sheet language (as opposed to a mark up language or programming language). Using CSS styles can be applied to elements on the page.\n\n\nCSS Syntax\n\n\nCSS styles are applied to elements they have the following syntax:\n\n\nh1 {\n    color: #ff0000;\n}\n\n\n\n\nThe entire block is called the rule set. This is made up of the selector (in this case \nh1\n) and the declaration (in this case \ncolor: #ff0000\n). The declaration has 2 parts, the property (\ncolor\n) and the property value (\n#ff0000\n). The selector can have multiple properties e.g.\n\n\np {\n    color: #ff00ff;\n    font-size; 10px;\n}\n\n\n\n\nSelectors\n\n\nThe selectors determine what part of the page the declarations will be applied to.\n\n\nElement Selectors\n\n\nThis is when a style is applied to every element of a certain type. In the example below there are \nh1\n, \np\n and \nspan\n tags and the selectors in the CSS have the same names as the tags they are applied to\n\n\nSee the Pen \nPRGxaG\n by Susie (\n@susiec20\n) on \nCodePen\n.\n\n\n\n\n\n\nClass Selectors\n\n\nClass selectors must always have a \n.\n at the start of their name when declared in the CSS. They can have any name provided it has no spaces. To apply the class to an element use the syntax \nclass=className\n. In the example below the class \nblue-text\n is applied to a \nspan\n tag and a \nh1\n tag. Any element with the class on it will have the declarations for that class appiled to it e.g. turning the text blue.\n\n\nSee the Pen \nClass Selectors\n by Susie (\n@susiec20\n) on \nCodePen\n.\n\n\n\n\n\n\nID Selectors\n\n\nID selectors always start with a \n#\n when declared in the CSS and can have any name provided it has no spaces. An ID can only be applied to one element and allow you to uniquely identify a single element on the page.\n\n\nSee the Pen \nID Selector\n by Susie (\n@susiec20\n) on \nCodePen\n.\n\n\n\n\n\n\nPseudo Classes\n\n\nPseudo classes are added to the end of selectors to indicate that you only want the style applied on that selector when the element is in a certain state e.g. when the element is hovered over. The syntax is \nselectorName:pseudoClass\n. In the example below the paragraph text changes size when you hover over it.\n\n\nSee the Pen \nQmKzgV\n by Susie (\n@susiec20\n) on \nCodePen\n.\n\n\n\n\n\n\nProperties\n\n\nThere is a finite list of CSS properties that can be set on elements. Common CSS properties are available \nhere\n.\n\n\nCascading Styles\n\n\nInheritance\n\n\nIn CSS, inheritance controls what happens when property is set for a specific element. The the example below \ncolor\n is an inherited property. This is why the text in the span tag is red as well despite the colour of the text in the span tag never being specifically set. \nborder\n is not an inherited property only the paragraph has a border around it. The text in the span tag does not have a border around it. \n\n\nSee the Pen \nCSS Inheritance\n by Susie (\n@susiec20\n) on \nCodePen\n.\n\n\n\n\n\n\nInherited styles explain why the style of your web page can change even when a style has not been applied directly to an element. These styles can be overridden by more specific styles as shown in the example below.\n\n\nSee the Pen \nOverride styles\n by Susie (\n@susiec20\n) on \nCodePen\n.\n\n\n\n\n\n\nIf multiple styles are added with the same level of importance, for example definining multiple rule sets with the same selector, the declration that is further down the document will be applied. As shown in this example:\n\n\nSee the Pen \nIdentical styles\n by Susie (\n@susiec20\n) on \nCodePen\n.\n\n\n\n\n\n\nOnly conflicting rules are overridden. So in this case the background colour is applied from the first rule set but the value for the color property is overridden by the property further down the CSS document.\n\n\nTODO Box Model\n\n\nColour Names\n\n\nColours in CSS are usually written as \nhexidecimal numbers\n. This \nwebsite\n provides a tool to get a colour's hexidecimal value.\n\n\nApplying CSS to HTML\n\n\nTypically CSS is written in a different file to the HTML. This is known as an external stylesheet. In order for the styles in the css file to be applied to the html the css file needs to be linked to the html document. Imagine you have created 2 files in the same directory (or folder) on your computer one called style.css and one called index.html. To link them together a \nlink\n tag nested within in the \nhead\n tag is used. This is done within the head tag as linking to a style sheet is information about the webpage (metadata) as opposed to information that should appear on the webpage.\n\n\n!DOCTYPE html\n\n\nhtml\n\n    \nhead\n\n        \nlink rel=\nstylesheet\n href=\nstyle.css\n\n    \n/head\n\n    \nbody\n\n    \n/body\n\n\n/html\n\n\n\n\n\nStyles can also be applied using inline stylesheets and inline styles this article covers \nalternative approaches\n in more detail.", 
            "title": "CSS"
        }, 
        {
            "location": "/css/#css", 
            "text": "CSS stands for cascading style sheets. It is used to describe how a html document should look. In web development typically this means how it will look on the screen but it could also mean how it will look on paper. CSS is a style sheet language (as opposed to a mark up language or programming language). Using CSS styles can be applied to elements on the page.", 
            "title": "CSS"
        }, 
        {
            "location": "/css/#css-syntax", 
            "text": "CSS styles are applied to elements they have the following syntax:  h1 {\n    color: #ff0000;\n}  The entire block is called the rule set. This is made up of the selector (in this case  h1 ) and the declaration (in this case  color: #ff0000 ). The declaration has 2 parts, the property ( color ) and the property value ( #ff0000 ). The selector can have multiple properties e.g.  p {\n    color: #ff00ff;\n    font-size; 10px;\n}", 
            "title": "CSS Syntax"
        }, 
        {
            "location": "/css/#selectors", 
            "text": "The selectors determine what part of the page the declarations will be applied to.", 
            "title": "Selectors"
        }, 
        {
            "location": "/css/#element-selectors", 
            "text": "This is when a style is applied to every element of a certain type. In the example below there are  h1 ,  p  and  span  tags and the selectors in the CSS have the same names as the tags they are applied to  See the Pen  PRGxaG  by Susie ( @susiec20 ) on  CodePen .", 
            "title": "Element Selectors"
        }, 
        {
            "location": "/css/#class-selectors", 
            "text": "Class selectors must always have a  .  at the start of their name when declared in the CSS. They can have any name provided it has no spaces. To apply the class to an element use the syntax  class=className . In the example below the class  blue-text  is applied to a  span  tag and a  h1  tag. Any element with the class on it will have the declarations for that class appiled to it e.g. turning the text blue.  See the Pen  Class Selectors  by Susie ( @susiec20 ) on  CodePen .", 
            "title": "Class Selectors"
        }, 
        {
            "location": "/css/#id-selectors", 
            "text": "ID selectors always start with a  #  when declared in the CSS and can have any name provided it has no spaces. An ID can only be applied to one element and allow you to uniquely identify a single element on the page.  See the Pen  ID Selector  by Susie ( @susiec20 ) on  CodePen .", 
            "title": "ID Selectors"
        }, 
        {
            "location": "/css/#pseudo-classes", 
            "text": "Pseudo classes are added to the end of selectors to indicate that you only want the style applied on that selector when the element is in a certain state e.g. when the element is hovered over. The syntax is  selectorName:pseudoClass . In the example below the paragraph text changes size when you hover over it.  See the Pen  QmKzgV  by Susie ( @susiec20 ) on  CodePen .", 
            "title": "Pseudo Classes"
        }, 
        {
            "location": "/css/#properties", 
            "text": "There is a finite list of CSS properties that can be set on elements. Common CSS properties are available  here .", 
            "title": "Properties"
        }, 
        {
            "location": "/css/#cascading-styles", 
            "text": "", 
            "title": "Cascading Styles"
        }, 
        {
            "location": "/css/#inheritance", 
            "text": "In CSS, inheritance controls what happens when property is set for a specific element. The the example below  color  is an inherited property. This is why the text in the span tag is red as well despite the colour of the text in the span tag never being specifically set.  border  is not an inherited property only the paragraph has a border around it. The text in the span tag does not have a border around it.   See the Pen  CSS Inheritance  by Susie ( @susiec20 ) on  CodePen .   Inherited styles explain why the style of your web page can change even when a style has not been applied directly to an element. These styles can be overridden by more specific styles as shown in the example below.  See the Pen  Override styles  by Susie ( @susiec20 ) on  CodePen .   If multiple styles are added with the same level of importance, for example definining multiple rule sets with the same selector, the declration that is further down the document will be applied. As shown in this example:  See the Pen  Identical styles  by Susie ( @susiec20 ) on  CodePen .   Only conflicting rules are overridden. So in this case the background colour is applied from the first rule set but the value for the color property is overridden by the property further down the CSS document.", 
            "title": "Inheritance"
        }, 
        {
            "location": "/css/#todo-box-model", 
            "text": "", 
            "title": "TODO Box Model"
        }, 
        {
            "location": "/css/#colour-names", 
            "text": "Colours in CSS are usually written as  hexidecimal numbers . This  website  provides a tool to get a colour's hexidecimal value.", 
            "title": "Colour Names"
        }, 
        {
            "location": "/css/#applying-css-to-html", 
            "text": "Typically CSS is written in a different file to the HTML. This is known as an external stylesheet. In order for the styles in the css file to be applied to the html the css file needs to be linked to the html document. Imagine you have created 2 files in the same directory (or folder) on your computer one called style.css and one called index.html. To link them together a  link  tag nested within in the  head  tag is used. This is done within the head tag as linking to a style sheet is information about the webpage (metadata) as opposed to information that should appear on the webpage.  !DOCTYPE html  html \n     head \n         link rel= stylesheet  href= style.css \n     /head \n     body \n     /body  /html   Styles can also be applied using inline stylesheets and inline styles this article covers  alternative approaches  in more detail.", 
            "title": "Applying CSS to HTML"
        }, 
        {
            "location": "/javascript/", 
            "text": "Javascript\n\n\nTODO Console.log\n\n\nTODO Variables\n\n\nTODO Incrementing numbers\n\n\nTODO Types\n\n\nTODO Arrays\n\n\nTODO Boolean logic and if statements\n\n\nTODO For loops\n\n\nTODO Functions\n\n\nTODO Applying Javascript to HTML", 
            "title": "Javascript"
        }, 
        {
            "location": "/javascript/#javascript", 
            "text": "", 
            "title": "Javascript"
        }, 
        {
            "location": "/javascript/#todo-consolelog", 
            "text": "", 
            "title": "TODO Console.log"
        }, 
        {
            "location": "/javascript/#todo-variables", 
            "text": "", 
            "title": "TODO Variables"
        }, 
        {
            "location": "/javascript/#todo-incrementing-numbers", 
            "text": "", 
            "title": "TODO Incrementing numbers"
        }, 
        {
            "location": "/javascript/#todo-types", 
            "text": "", 
            "title": "TODO Types"
        }, 
        {
            "location": "/javascript/#todo-arrays", 
            "text": "", 
            "title": "TODO Arrays"
        }, 
        {
            "location": "/javascript/#todo-boolean-logic-and-if-statements", 
            "text": "", 
            "title": "TODO Boolean logic and if statements"
        }, 
        {
            "location": "/javascript/#todo-for-loops", 
            "text": "", 
            "title": "TODO For loops"
        }, 
        {
            "location": "/javascript/#todo-functions", 
            "text": "", 
            "title": "TODO Functions"
        }, 
        {
            "location": "/javascript/#todo-applying-javascript-to-html", 
            "text": "", 
            "title": "TODO Applying Javascript to HTML"
        }, 
        {
            "location": "/links/", 
            "text": "Links\n\n\nMDN Web Docs\n\n\nMDN web docs\n have loads of information on web development.\n\n\nHTML\n\n\nIntroduction to HTML\n\n\nHTML Elements List\n\n\nCSS\n\n\nIntroduction to CSS\n\n\nSelectors in depth\n\n\nCommon CSS properties\n\n\nFull list of CSS properties\n\n\nInheritance", 
            "title": "Useful Links"
        }, 
        {
            "location": "/links/#links", 
            "text": "", 
            "title": "Links"
        }, 
        {
            "location": "/links/#mdn-web-docs", 
            "text": "MDN web docs  have loads of information on web development.", 
            "title": "MDN Web Docs"
        }, 
        {
            "location": "/links/#html", 
            "text": "Introduction to HTML  HTML Elements List", 
            "title": "HTML"
        }, 
        {
            "location": "/links/#css", 
            "text": "Introduction to CSS  Selectors in depth  Common CSS properties  Full list of CSS properties  Inheritance", 
            "title": "CSS"
        }
    ]
}